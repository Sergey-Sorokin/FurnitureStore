@model FurnitureStore.ViewModels.FurnitureViewModel

@{
    ViewBag.Title = "Изменение объявления";
}

<h2>@ViewBag.Title</h2>

<div class="form-horizontal">
    <h4>Мебель</h4>
    <hr />

    @using (Html.BeginForm("Edit", "Furniture", FormMethod.Post, new { enctype = "multipart/form-data" })) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Furniture.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Furniture.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Furniture.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Furniture.Description, new { htmlAttributes = new { @class = "form-control", rows = 8 } })
                @Html.ValidationMessageFor(model => model.Furniture.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Furniture.PublishDate, new { htmlAttributes = new { @class = "form-control date-control" } })
                @Html.ValidationMessageFor(model => model.Furniture.PublishDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.ArticleNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Furniture.ArticleNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Furniture.ArticleNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.Producer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Furniture.ProducerID, Model.ProducerItems, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Furniture.Producer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Furniture.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Furniture.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Furniture.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Furniture.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Furniture.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Furniture.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Furniture.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Furniture.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Furniture.Images, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationMessage("Files", "", new { @class = "text-danger" })
                <span class="btn btn-default btn-file">
                    Загрузить<input type="file" name="Files" multiple />
                </span>
            </div>
        </div>

        if (Model.Furniture.Images != null) {
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <div class="checkbox checkbox-primary">
                        @foreach (var img in Model.Furniture.Images) {
                            @Html.DisplayFor(model => img, new { Width = 150 })
                            <input type="checkbox" name="CheckedImages" value="@img.ID" checked="checked" class="image-checkbox" />
                        }
                    </div>
                </div>
            </div>
        }

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
                @Html.ActionLink("Назад", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datepicker")
    @Scripts.Render("~/bundles/globalization")

    @*<script>
            fotoramaDefaults = {
                width: '100%',
                ratio: 16 / 9,
                allowfullscreen: 'native',
                nav: 'thumbs',
                autoplay: true
            }
        </script>
        <script src="http://cdnjs.cloudflare.com/ajax/libs/fotorama/4.6.4/fotorama.js"></script>*@
}

@section Styles {
    @Styles.Render("~/Content/datepicker")
    @*<link href="http://cdnjs.cloudflare.com/ajax/libs/fotorama/4.6.4/fotorama.css" rel="stylesheet">*@
}
